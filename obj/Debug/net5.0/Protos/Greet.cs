// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FreeStripService {

  /// <summary>Holder for reflection information generated from Protos/greet.proto</summary>
  public static partial class GreetReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/greet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GreetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3MvZ3JlZXQucHJvdG8SCVBsYWluSW5mbyKKAQoXUGxhaW5QcmVw",
            "YXJhdGlvblJlcXVlc3QSEgoKcGxhaW5Nb2RlbBgCIAEoERIQCghhbHRpdHVk",
            "ZRgBIAEoARIUCgxhbHRpdHVkZVRlbXAYFCABKAESFgoOY2FsY3VsYXRlZFRl",
            "bXAYCiABKAESGwoSY2FsY3VsYXRlZFByZXNzdXJlGPgFIAEoASJfChVQbGFp",
            "blByZXBhcmF0aW9uUmVwbHkSFgoOcHJlcGFyZU1pbnV0ZXMYHiABKAESGAoQ",
            "YnVzeVN0cmlwTWludXRlcxgKIAEoARIUCgtzdHJpcExlbmd0aBiIJyABKAEy",
            "uQEKB0dyZWV0ZXISVgoOR2V0TGFuZGluZ0luZm8SIi5QbGFpbkluZm8uUGxh",
            "aW5QcmVwYXJhdGlvblJlcXVlc3QaIC5QbGFpbkluZm8uUGxhaW5QcmVwYXJh",
            "dGlvblJlcGx5ElYKDkdldFRha2VPZmZJbmZvEiIuUGxhaW5JbmZvLlBsYWlu",
            "UHJlcGFyYXRpb25SZXF1ZXN0GiAuUGxhaW5JbmZvLlBsYWluUHJlcGFyYXRp",
            "b25SZXBseUITqgIQRnJlZVN0cmlwU2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FreeStripService.PlainPreparationRequest), global::FreeStripService.PlainPreparationRequest.Parser, new[]{ "PlainModel", "Altitude", "AltitudeTemp", "CalculatedTemp", "CalculatedPressure" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FreeStripService.PlainPreparationReply), global::FreeStripService.PlainPreparationReply.Parser, new[]{ "PrepareMinutes", "BusyStripMinutes", "StripLength" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlainPreparationRequest : pb::IMessage<PlainPreparationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlainPreparationRequest> _parser = new pb::MessageParser<PlainPreparationRequest>(() => new PlainPreparationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlainPreparationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FreeStripService.GreetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainPreparationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainPreparationRequest(PlainPreparationRequest other) : this() {
      plainModel_ = other.plainModel_;
      altitude_ = other.altitude_;
      altitudeTemp_ = other.altitudeTemp_;
      calculatedTemp_ = other.calculatedTemp_;
      calculatedPressure_ = other.calculatedPressure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainPreparationRequest Clone() {
      return new PlainPreparationRequest(this);
    }

    /// <summary>Field number for the "plainModel" field.</summary>
    public const int PlainModelFieldNumber = 2;
    private int plainModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlainModel {
      get { return plainModel_; }
      set {
        plainModel_ = value;
      }
    }

    /// <summary>Field number for the "altitude" field.</summary>
    public const int AltitudeFieldNumber = 1;
    private double altitude_;
    /// <summary>
    ///высота над уровнем моря
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    /// <summary>Field number for the "altitudeTemp" field.</summary>
    public const int AltitudeTempFieldNumber = 20;
    private double altitudeTemp_;
    /// <summary>
    ///температура на этой высоте
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AltitudeTemp {
      get { return altitudeTemp_; }
      set {
        altitudeTemp_ = value;
      }
    }

    /// <summary>Field number for the "calculatedTemp" field.</summary>
    public const int CalculatedTempFieldNumber = 10;
    private double calculatedTemp_;
    /// <summary>
    ///рассчетное значение температуры для высоты
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CalculatedTemp {
      get { return calculatedTemp_; }
      set {
        calculatedTemp_ = value;
      }
    }

    /// <summary>Field number for the "calculatedPressure" field.</summary>
    public const int CalculatedPressureFieldNumber = 760;
    private double calculatedPressure_;
    /// <summary>
    ///рассчетное значение давления для высоты
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CalculatedPressure {
      get { return calculatedPressure_; }
      set {
        calculatedPressure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlainPreparationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlainPreparationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlainModel != other.PlainModel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Altitude, other.Altitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AltitudeTemp, other.AltitudeTemp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CalculatedTemp, other.CalculatedTemp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CalculatedPressure, other.CalculatedPressure)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlainModel != 0) hash ^= PlainModel.GetHashCode();
      if (Altitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Altitude);
      if (AltitudeTemp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AltitudeTemp);
      if (CalculatedTemp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CalculatedTemp);
      if (CalculatedPressure != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CalculatedPressure);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Altitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Altitude);
      }
      if (PlainModel != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(PlainModel);
      }
      if (CalculatedTemp != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(CalculatedTemp);
      }
      if (AltitudeTemp != 0D) {
        output.WriteRawTag(161, 1);
        output.WriteDouble(AltitudeTemp);
      }
      if (CalculatedPressure != 0D) {
        output.WriteRawTag(193, 47);
        output.WriteDouble(CalculatedPressure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Altitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Altitude);
      }
      if (PlainModel != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(PlainModel);
      }
      if (CalculatedTemp != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(CalculatedTemp);
      }
      if (AltitudeTemp != 0D) {
        output.WriteRawTag(161, 1);
        output.WriteDouble(AltitudeTemp);
      }
      if (CalculatedPressure != 0D) {
        output.WriteRawTag(193, 47);
        output.WriteDouble(CalculatedPressure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlainModel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PlainModel);
      }
      if (Altitude != 0D) {
        size += 1 + 8;
      }
      if (AltitudeTemp != 0D) {
        size += 2 + 8;
      }
      if (CalculatedTemp != 0D) {
        size += 1 + 8;
      }
      if (CalculatedPressure != 0D) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlainPreparationRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlainModel != 0) {
        PlainModel = other.PlainModel;
      }
      if (other.Altitude != 0D) {
        Altitude = other.Altitude;
      }
      if (other.AltitudeTemp != 0D) {
        AltitudeTemp = other.AltitudeTemp;
      }
      if (other.CalculatedTemp != 0D) {
        CalculatedTemp = other.CalculatedTemp;
      }
      if (other.CalculatedPressure != 0D) {
        CalculatedPressure = other.CalculatedPressure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Altitude = input.ReadDouble();
            break;
          }
          case 16: {
            PlainModel = input.ReadSInt32();
            break;
          }
          case 81: {
            CalculatedTemp = input.ReadDouble();
            break;
          }
          case 161: {
            AltitudeTemp = input.ReadDouble();
            break;
          }
          case 6081: {
            CalculatedPressure = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Altitude = input.ReadDouble();
            break;
          }
          case 16: {
            PlainModel = input.ReadSInt32();
            break;
          }
          case 81: {
            CalculatedTemp = input.ReadDouble();
            break;
          }
          case 161: {
            AltitudeTemp = input.ReadDouble();
            break;
          }
          case 6081: {
            CalculatedPressure = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message containing the greetings.
  /// </summary>
  public sealed partial class PlainPreparationReply : pb::IMessage<PlainPreparationReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlainPreparationReply> _parser = new pb::MessageParser<PlainPreparationReply>(() => new PlainPreparationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlainPreparationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FreeStripService.GreetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainPreparationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainPreparationReply(PlainPreparationReply other) : this() {
      prepareMinutes_ = other.prepareMinutes_;
      busyStripMinutes_ = other.busyStripMinutes_;
      stripLength_ = other.stripLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainPreparationReply Clone() {
      return new PlainPreparationReply(this);
    }

    /// <summary>Field number for the "prepareMinutes" field.</summary>
    public const int PrepareMinutesFieldNumber = 30;
    private double prepareMinutes_;
    /// <summary>
    ///время на подготовку самолета
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PrepareMinutes {
      get { return prepareMinutes_; }
      set {
        prepareMinutes_ = value;
      }
    }

    /// <summary>Field number for the "busyStripMinutes" field.</summary>
    public const int BusyStripMinutesFieldNumber = 10;
    private double busyStripMinutes_;
    /// <summary>
    ///время необходое, чтобы полоса для самолета оставалось занятой после взлета/посадки
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BusyStripMinutes {
      get { return busyStripMinutes_; }
      set {
        busyStripMinutes_ = value;
      }
    }

    /// <summary>Field number for the "stripLength" field.</summary>
    public const int StripLengthFieldNumber = 5000;
    private double stripLength_;
    /// <summary>
    ///необходимая длина полосы для взлета
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StripLength {
      get { return stripLength_; }
      set {
        stripLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlainPreparationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlainPreparationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrepareMinutes, other.PrepareMinutes)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BusyStripMinutes, other.BusyStripMinutes)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StripLength, other.StripLength)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrepareMinutes != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrepareMinutes);
      if (BusyStripMinutes != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BusyStripMinutes);
      if (StripLength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StripLength);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BusyStripMinutes != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(BusyStripMinutes);
      }
      if (PrepareMinutes != 0D) {
        output.WriteRawTag(241, 1);
        output.WriteDouble(PrepareMinutes);
      }
      if (StripLength != 0D) {
        output.WriteRawTag(193, 184, 2);
        output.WriteDouble(StripLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BusyStripMinutes != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(BusyStripMinutes);
      }
      if (PrepareMinutes != 0D) {
        output.WriteRawTag(241, 1);
        output.WriteDouble(PrepareMinutes);
      }
      if (StripLength != 0D) {
        output.WriteRawTag(193, 184, 2);
        output.WriteDouble(StripLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrepareMinutes != 0D) {
        size += 2 + 8;
      }
      if (BusyStripMinutes != 0D) {
        size += 1 + 8;
      }
      if (StripLength != 0D) {
        size += 3 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlainPreparationReply other) {
      if (other == null) {
        return;
      }
      if (other.PrepareMinutes != 0D) {
        PrepareMinutes = other.PrepareMinutes;
      }
      if (other.BusyStripMinutes != 0D) {
        BusyStripMinutes = other.BusyStripMinutes;
      }
      if (other.StripLength != 0D) {
        StripLength = other.StripLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 81: {
            BusyStripMinutes = input.ReadDouble();
            break;
          }
          case 241: {
            PrepareMinutes = input.ReadDouble();
            break;
          }
          case 40001: {
            StripLength = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 81: {
            BusyStripMinutes = input.ReadDouble();
            break;
          }
          case 241: {
            PrepareMinutes = input.ReadDouble();
            break;
          }
          case 40001: {
            StripLength = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
